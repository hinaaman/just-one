"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const node_crypto_1 = __importDefault(require("node:crypto"));
const webFetch = global.fetch;
/** jest dose not use crypto in the global, but this is OK for node 18 */
if (typeof global.crypto === 'undefined') {
    global.crypto = node_crypto_1.default;
}
global.fetch = (info, init) => {
    init = {
        // Disable compression handling so people can return the result of a fetch
        // directly in the loader without messing with the Content-Encoding header.
        compress: false,
        ...init,
    };
    return webFetch(info, init);
};
